@using NonFactors.Mvc.Grid;

@model IEnumerable<CRM_AGD.Areas.Address.Models.Street>

@{
  ViewData["Title"] = "Index";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
  <a asp-action="Create">Create New</a>
</p>
<table class="table">
  <thead>
    <tr>
      <th>
        @Html.DisplayNameFor(model => model.Name)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.city)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.streetPrefix)
      </th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    @foreach (var item in Model)
    {
      <tr>
        <td>
          @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.city.Name)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.streetPrefix.Prefix)
        </td>
        <td>
          <a asp-action="Edit" asp-route-id="@item.StreetId">Edit</a> |
          <a asp-action="Details" asp-route-id="@item.StreetId">Details</a> |
          <a asp-action="Delete" asp-route-id="@item.StreetId">Delete</a>
        </td>
      </tr>
    }
  </tbody>
</table>


@*@(Html
                        .Grid(Model)
                        .Build(columns =>
                        {
                          columns.Add(model => model.StreetId).Titled("Id");
                          columns.Add(model => model.Name).Titled("Name").Filterable(false);
                          columns.Add(model => model.streetPrefix.Prefix).Titled("Street prefix").Filterable(false);
                          columns.Add(model => model.city.Name).Titled("City").Filterable(false);


                          columns.Add(model => Html.ActionLink("Edit", "Edit", new { id = model.StreetId }));
                          columns.Add(model => Html.ActionLink("Details", "Details", new { id = model.StreetId }));
                          columns.Add(model => Html.ActionLink("Delete", "Delete", new { id = model.StreetId })).Css("fixed-width");
                        }).WithFilterMode(GridFilterMode.FilterRow).Empty("No data found").Sortable().MultiFilterable()
                  .Pageable(pager =>
                  {
                    pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 25, "25" }, { 50, "50" } };
                    pager.ShowPageSizes = true;
                    pager.PagesToDisplay = 5;
                    pager.CurrentPage = 1;
                    pager.RowsPerPage = 25;
                  })

)*@